document.addEventListener('DOMContentLoaded', () => {
    const loginForm = document.getElementById('loginForm');
    const loginError = document.getElementById('loginError');
    const dataContainer = document.querySelector('.data-container');
    const temperatureElement = document.getElementById('temperature');
    const humidityElement = document.getElementById('humidity');
    const logoutButton = document.getElementById('logout');
    let socket;

    loginForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        try {
            const response = await fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ username, password })
            });

            const result = await response.json();

            if (result.success) {
                loginForm.style.display = 'none';
                dataContainer.style.display = 'block';
                initializeSocket();
            } else {
                loginError.textContent = 'Invalid credentials';
            }
        } catch (error) {
            loginError.textContent = 'An error occurred. Please try again.';
        }
    });

    logoutButton.addEventListener('click', () => {
        dataContainer.style.display = 'none';
        loginForm.style.display = 'block';
        if (socket) {
            socket.disconnect();
        }
    });

    function initializeSocket() {
        socket = io();

        // Listen for 'data' events from the server
        socket.on('data', (data) => {
            const [humidity, temperature] = data.trim().split(' ');
            humidityElement.textContent = `${humidity}`;
            temperatureElement.textContent = `${temperature}Â°C`;
        });

        // Handle socket disconnection
        socket.on('disconnect', () => {
            temperatureElement.textContent = 'Disconnected from server';
            humidityElement.textContent = '';
        });
    }
});
